üìÑ Project Plan: System Data Fetcher

üñ• Objective:
Create a Python program that:

1. Opens an `.exe` file
2. Waits for 10 seconds in GUI
3. Automatically opens a localhost link in the browser
4. show .html file in which all the info is present

---

### 1Ô∏è‚É£ Program Flow


1. Fetch System Data

   * CPU Usage (percentage, cores, frequency)
   * RAM Usage (total, used, free, percentage)
   * Disk Usage (total, used, free, percentage)
   * OS Information (name, version, architecture)
   * Battery Status (percentage, charging/not charging, time left)
   * Network Info (IP address, speed, interface details)
   * Running Processes (PID, name, CPU%, memory%)

2. Format & Store Data in JSON

   * Create a dictionary with all system stats
   * Save data using `json.dump()` in a `.json` file

---

### 2Ô∏è‚É£ File Structure

```
project/
‚îÇ-- main.py              # Main script to run everything
‚îÇ-- fetch_data.py        # Functions to fetch CPU, RAM, Disk, etc.
‚îÇ-- utils.py             # Utility functions (open exe, open browser)
‚îÇ-- requirements.txt     # Required Python modules
‚îÇ-- output.json          # Output file with system data
‚îÇ-- README.txt           # This instruction file
```

---

### 3Ô∏è‚É£ Required Python Modules

* `psutil` ‚Üí CPU, RAM, Disk, Battery, Network
* `platform` ‚Üí OS details
* `socket` ‚Üí Network IP details
* `json` ‚Üí Data storage
* `time` ‚Üí Delay handling
* `subprocess` / `os` ‚Üí Open `.exe` file
* `webbrowser` ‚Üí Open localhost link

---

### 4Ô∏è‚É£ Future Improvements

* Add auto-refresh for live data updates
* Create a Flask/Django dashboard for visual representation
* Export reports in CSV or PDF format
